/*
   Generated by ex4-to-mq4 decompiler FREEWARE 4.0.451.5
   Website:  H ttp: //Ww W . m Et AQUo T ES . N E t
   E-mail :  s UP P O R T @ ME Ta q uOT eS.nET
*/
#property copyright "Copyright © 2008, FOREXflash Software Corp."
#property link      "http://www.metaquotes.net"

#property indicator_separate_window
#property indicator_buffers 8
#property indicator_color1 White
#property indicator_color2 Lime
#property indicator_color3 Red
#property indicator_color4 Black
#property indicator_color5 Gray
#property indicator_color6 Gray
#property indicator_color7 Red
#property indicator_color8 Lime

extern bool ShowText = TRUE;
extern int Corner = 1;
extern int MA_Length = 100;
extern color Trending = C'0x23,0x23,0x23';
extern color Ranging = Black;
double G_ibuf_96[];
double G_ibuf_100[];
double G_ibuf_104[];
double G_ibuf_108[];
double G_ibuf_112[];
double G_ibuf_116[];
double G_ibuf_120[];
double G_ibuf_124[];
int Gi_128 = 1;
string Gs_132;

int init() {
   string Ls_0 = "2030.06.12";
   int str2time_8 = StrToTime(Ls_0);
   if (TimeCurrent() >= str2time_8) {
      Alert("The trial version expired! Contact forexflash@gmail.com");
      return (1);
   }
   SetIndexBuffer(0, G_ibuf_96);
   SetIndexStyle(0, DRAW_HISTOGRAM);
   SetIndexLabel(0, "Spread(High-Low)");
   SetIndexStyle(1, DRAW_HISTOGRAM);
   SetIndexBuffer(1, G_ibuf_100);
   SetIndexLabel(1, "UpperWick");
   SetIndexStyle(2, DRAW_HISTOGRAM);
   SetIndexBuffer(2, G_ibuf_104);
   SetIndexLabel(2, "LowerWick");
   SetIndexBuffer(3, G_ibuf_108);
   SetIndexStyle(3, DRAW_NONE);
   SetIndexBuffer(4, G_ibuf_112);
   SetIndexStyle(4, DRAW_LINE, STYLE_DOT);
   SetIndexLabel(4, "AverageSpread");
   SetIndexBuffer(5, G_ibuf_116);
   SetIndexStyle(5, DRAW_ARROW, STYLE_SOLID);
   SetIndexArrow(5, 117);
   SetIndexLabel(5, "DivergenceNone");
   SetIndexBuffer(6, G_ibuf_120);
   SetIndexStyle(6, DRAW_ARROW, STYLE_SOLID);
   SetIndexArrow(6, 117);
   SetIndexLabel(6, "DivergenceTrending");
   SetIndexBuffer(7, G_ibuf_124);
   SetIndexStyle(7, DRAW_ARROW, STYLE_SOLID);
   SetIndexArrow(7, 117);
   SetIndexLabel(7, "DivergenceBearish");
   string Ls_12 = "VSA© WICK/SPREAD/DIVERGENCE";
   IndicatorShortName(Ls_12);
   Gs_132 = Ls_12;
   ObjectDelete("Spread(High-Low)");
   IndicatorDigits(1);
   return (1);
}

int deinit() {
   string name_4;
   for (int Li_0 = ObjectsTotal() - 1; Li_0 >= 0; Li_0--) {
      name_4 = ObjectName(Li_0);
      if (StringSubstr(name_4, 0, 8) == "RSXTrend") ObjectDelete(name_4);
   }
   ObjectsDeleteAll(0, OBJ_LABEL);
   return (0);
}

int start() {
   double Ld_28;
   double Ld_36;
   double Ld_44;
   string Ls_0 = "2030.06.12";
   int str2time_8 = StrToTime(Ls_0);
   if (TimeCurrent() >= str2time_8) {
      Alert("The trial version expired! Contact forexflash@gmail.com");
      return (1);
   }
   if (ShowText == TRUE) draw_objects();
   AVGVolume();
   Div();
   int Li_20 = IndicatorCounted();
   if (Li_20 < 0) return (-1);
   if (Li_20 > 0) Li_20--;
   for (int Li_24 = Bars - Li_20; Li_24 >= 0; Li_24--) {
      Ld_28 = iHigh(NULL, 0, Li_24) - iLow(NULL, 0, Li_24);
      G_ibuf_96[Li_24] = Ld_28 / Point / Gi_128;
      if (iOpen(NULL, 0, Li_24) > iClose(NULL, 0, Li_24)) Ld_36 = iHigh(NULL, 0, Li_24) - iOpen(NULL, 0, Li_24);
      if (iOpen(NULL, 0, Li_24) <= iClose(NULL, 0, Li_24)) Ld_36 = iHigh(NULL, 0, Li_24) - iClose(NULL, 0, Li_24);
      if (iOpen(NULL, 0, Li_24) > iClose(NULL, 0, Li_24)) Ld_44 = iLow(NULL, 0, Li_24) - iClose(NULL, 0, Li_24);
      if (iOpen(NULL, 0, Li_24) <= iClose(NULL, 0, Li_24)) Ld_44 = iLow(NULL, 0, Li_24) - iOpen(NULL, 0, Li_24);
      G_ibuf_100[Li_24] = Ld_36 / Point / Gi_128;
      G_ibuf_104[Li_24] = Ld_44 / Point / Gi_128;
   }
   return (0);
}

int AVGVolume() {
   string name_16;
   int window_0 = WindowFind("VSA© WICK/SPREAD/DIVERGENCE");
   int Li_12 = IndicatorCounted();
   if (Li_12 > 0) Li_12--;
   int Li_8 = Bars - Li_12;
   for (int Li_4 = 0; Li_4 < Li_8; Li_4++) G_ibuf_108[Li_4] = (iHigh(NULL, 0, Li_4) - iLow(NULL, 0, Li_4)) / Point / Gi_128;
   for (Li_4 = 0; Li_4 < Li_8; Li_4++) G_ibuf_112[Li_4] = iMAOnArray(G_ibuf_108, 0, MA_Length, 0, MODE_EMA, Li_4);
   int count_24 = 0;
   for (Li_4 = Li_8 - 1; Li_4 > 0; Li_4--) {
      if (G_ibuf_108[Li_4] > G_ibuf_112[Li_4]) {
         count_24++;
         name_16 = "RSXTrend" + count_24;
         if (ObjectFind(name_16) == -1) ObjectCreate(name_16, OBJ_RECTANGLE, window_0, 0, 0);
         ObjectSet(name_16, OBJPROP_COLOR, Ranging);
         ObjectSet(name_16, OBJPROP_PRICE1, 100000);
         ObjectSet(name_16, OBJPROP_PRICE2, -100000);
         ObjectSet(name_16, OBJPROP_TIME1, Time[Li_4]);
         ObjectSet(name_16, OBJPROP_TIME2, Time[Li_4 - 1]);
      } else {
         if (G_ibuf_108[Li_4] < G_ibuf_112[Li_4]) {
            count_24++;
            name_16 = "RSXTrend" + count_24;
            if (ObjectFind(name_16) == -1) ObjectCreate(name_16, OBJ_RECTANGLE, window_0, 0, 0);
            ObjectSet(name_16, OBJPROP_COLOR, Trending);
            ObjectSet(name_16, OBJPROP_PRICE1, 100000);
            ObjectSet(name_16, OBJPROP_PRICE2, -100000);
            ObjectSet(name_16, OBJPROP_TIME1, Time[Li_4]);
            ObjectSet(name_16, OBJPROP_TIME2, Time[Li_4 - 1]);
         } else ObjectSet(name_16, OBJPROP_TIME2, Time[Li_4 - 1]);
      }
   }
   return (0);
}

void Div() {
   for (int index_0 = 0; index_0 < 500; index_0++) {
      G_ibuf_116[index_0] = G_ibuf_96[index_0];
      if (Close[index_0] > Open[index_0 + 1] && Volume[index_0] < Volume[index_0 + 1]) G_ibuf_120[index_0] = G_ibuf_96[index_0];
      if (Close[index_0] < Open[index_0 + 1] && Volume[index_0] < Volume[index_0 + 1]) G_ibuf_124[index_0] = G_ibuf_96[index_0];
   }
}

void draw_objects() {
   ObjectCreate("Box", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("Box", "V  S  A  ®", 14, "Trebuchet MS", Orange);
   ObjectSet("Box", OBJPROP_CORNER, Corner);
   ObjectSet("Box", OBJPROP_XDISTANCE, 15);
   ObjectSet("Box", OBJPROP_YDISTANCE, 1);
   ObjectCreate("Box1", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("Box1", "Spread/Wick/Candle", 8, "Trebuchet MS", Gray);
   ObjectSet("Box1", OBJPROP_CORNER, Corner);
   ObjectSet("Box1", OBJPROP_XDISTANCE, 15);
   ObjectSet("Box1", OBJPROP_YDISTANCE, 18);
   string dbl2str_0 = DoubleToStr(G_ibuf_96[0], 1);
   ObjectCreate("Spread(High-Low)", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("Spread(High-Low)", "Spread(H-L):" + dbl2str_0, 13, "Trebuchet MS", White);
   ObjectSet("Spread(High-Low)", OBJPROP_CORNER, Corner);
   ObjectSet("Spread(High-Low)", OBJPROP_XDISTANCE, 15);
   ObjectSet("Spread(High-Low)", OBJPROP_YDISTANCE, 34);
   ObjectCreate("BA_Spread(High-Low)", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("BA_Spread(High-Low)", "SPREAD IS BELOW AVERAGE.", 8, "Trebuchet MS", White);
   ObjectSet("BA_Spread(High-Low)", OBJPROP_CORNER, Corner);
   ObjectSet("BA_Spread(High-Low)", OBJPROP_XDISTANCE, 15);
   ObjectSet("BA_Spread(High-Low)", OBJPROP_YDISTANCE, 54);
   if (G_ibuf_96[0] > G_ibuf_112[0]) ObjectSetText("BA_Spread(High-Low)", "SPREAD IS ABOVE AVERAGE!!!", 8, "Trebuchet MS", Red);
   string dbl2str_8 = DoubleToStr(G_ibuf_100[0], 1);
   ObjectCreate("UpWick", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("UpWick", "WICK: " + dbl2str_8, 9, "Trebuchet MS", Lime);
   ObjectSet("UpWick", OBJPROP_CORNER, Corner);
   ObjectSet("UpWick", OBJPROP_XDISTANCE, 85);
   ObjectSet("UpWick", OBJPROP_YDISTANCE, 70);
   string dbl2str_16 = DoubleToStr(G_ibuf_104[0], 1);
   ObjectCreate("DnWick", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("DnWick", "WICK:" + dbl2str_16, 9, "Trebuchet MS", Red);
   ObjectSet("DnWick", OBJPROP_CORNER, Corner);
   ObjectSet("DnWick", OBJPROP_XDISTANCE, 15);
   ObjectSet("DnWick", OBJPROP_YDISTANCE, 70);
   ObjectCreate("Div", OBJ_LABEL, WindowFind(Gs_132), 0, 0);
   ObjectSetText("Div", "Divergance:None", 13, "Trebuchet MS", White);
   ObjectSet("Div", OBJPROP_CORNER, Corner);
   ObjectSet("Div", OBJPROP_XDISTANCE, 15);
   ObjectSet("Div", OBJPROP_YDISTANCE, 85);
   if (Close[1] > Open[2] && Volume[1] < Volume[2]) ObjectSetText("Div", "Divergance:Bearish", 13, "Trebuchet MS", Red);
   if (Close[1] < Open[2] && Volume[1] < Volume[2]) ObjectSetText("Div", "Divergance:Bullish", 13, "Trebuchet MS", Lime);
}